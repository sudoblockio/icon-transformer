// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: kafka_job.proto

package models

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents kafka consumer status, create by k9 bash job
// CREATE TABLE kafka_jobs (
//  job_id varchar,
//  worker_group varchar,
//  topic varchar,
//  partition bigint,
//  stop_offset bigint,
//  PRIMARY KEY (job_id, worker_group, topic, partition, stop_offset));
type KafkaJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId       string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id"`
	WorkerGroup string `protobuf:"bytes,2,opt,name=worker_group,json=workerGroup,proto3" json:"worker_group"`
	Topic       string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic"`
	Partition   uint64 `protobuf:"varint,4,opt,name=partition,proto3" json:"partition"`
	StopOffset  uint64 `protobuf:"varint,5,opt,name=stop_offset,json=stopOffset,proto3" json:"stop_offset"`
}

func (x *KafkaJob) Reset() {
	*x = KafkaJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaJob) ProtoMessage() {}

func (x *KafkaJob) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaJob.ProtoReflect.Descriptor instead.
func (*KafkaJob) Descriptor() ([]byte, []int) {
	return file_kafka_job_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaJob) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *KafkaJob) GetWorkerGroup() string {
	if x != nil {
		return x.WorkerGroup
	}
	return ""
}

func (x *KafkaJob) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaJob) GetPartition() uint64 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *KafkaJob) GetStopOffset() uint64 {
	if x != nil {
		return x.StopOffset
	}
	return 0
}

var File_kafka_job_proto protoreflect.FileDescriptor

var file_kafka_job_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f,
	0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x08, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4a,
	0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a,
	0x02, 0x28, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1e, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x26, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x28, 0x01, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x74, 0x6f, 0x70, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08,
	0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kafka_job_proto_rawDescOnce sync.Once
	file_kafka_job_proto_rawDescData = file_kafka_job_proto_rawDesc
)

func file_kafka_job_proto_rawDescGZIP() []byte {
	file_kafka_job_proto_rawDescOnce.Do(func() {
		file_kafka_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_kafka_job_proto_rawDescData)
	})
	return file_kafka_job_proto_rawDescData
}

var file_kafka_job_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kafka_job_proto_goTypes = []interface{}{
	(*KafkaJob)(nil), // 0: models.KafkaJob
}
var file_kafka_job_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kafka_job_proto_init() }
func file_kafka_job_proto_init() {
	if File_kafka_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kafka_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kafka_job_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_job_proto_goTypes,
		DependencyIndexes: file_kafka_job_proto_depIdxs,
		MessageInfos:      file_kafka_job_proto_msgTypes,
	}.Build()
	File_kafka_job_proto = out.File
	file_kafka_job_proto_rawDesc = nil
	file_kafka_job_proto_goTypes = nil
	file_kafka_job_proto_depIdxs = nil
}
