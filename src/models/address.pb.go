// Code generated by protoc-gen-go. DO NOT EDIT.
// source: address.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Address struct {
	// BlockETL
	Address                  string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	IsContract               bool    `protobuf:"varint,2,opt,name=is_contract,json=isContract,proto3" json:"is_contract,omitempty"`
	TransactionCount         int64   `protobuf:"varint,3,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	TransactionInternalCount int64   `protobuf:"varint,4,opt,name=transaction_internal_count,json=transactionInternalCount,proto3" json:"transaction_internal_count,omitempty"`
	LogCount                 int64   `protobuf:"varint,5,opt,name=log_count,json=logCount,proto3" json:"log_count,omitempty"`
	TokenTransferCount       int64   `protobuf:"varint,6,opt,name=token_transfer_count,json=tokenTransferCount,proto3" json:"token_transfer_count,omitempty"`
	Balance                  float64 `protobuf:"fixed64,7,opt,name=balance,proto3" json:"balance,omitempty"`
	Type                     string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// Contracts Processed
	Name                 string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	CreatedTimestamp     int64  `protobuf:"varint,11,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	IsToken              bool   `protobuf:"varint,12,opt,name=is_token,json=isToken,proto3" json:"is_token,omitempty"`
	ContractUpdatedBlock int64  `protobuf:"varint,14,opt,name=contract_updated_block,json=contractUpdatedBlock,proto3" json:"contract_updated_block,omitempty"`
	AuditTxHash          string `protobuf:"bytes,20,opt,name=audit_tx_hash,json=auditTxHash,proto3" json:"audit_tx_hash,omitempty"`
	CodeHash             string `protobuf:"bytes,21,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
	DeployTxHash         string `protobuf:"bytes,22,opt,name=deploy_tx_hash,json=deployTxHash,proto3" json:"deploy_tx_hash,omitempty"`
	ContractType         string `protobuf:"bytes,15,opt,name=contract_type,json=contractType,proto3" json:"contract_type,omitempty"`
	Status               string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Owner                string `protobuf:"bytes,23,opt,name=owner,proto3" json:"owner,omitempty"`
	// Governance Prep Processed
	IsPrep bool `protobuf:"varint,13,opt,name=is_prep,json=isPrep,proto3" json:"is_prep,omitempty"`
	// Tokens
	TokenStandard        string   `protobuf:"bytes,16,opt,name=token_standard,json=tokenStandard,proto3" json:"token_standard,omitempty"`
	Symbol               string   `protobuf:"bytes,17,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_982c640dad8fe78e, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetIsContract() bool {
	if m != nil {
		return m.IsContract
	}
	return false
}

func (m *Address) GetTransactionCount() int64 {
	if m != nil {
		return m.TransactionCount
	}
	return 0
}

func (m *Address) GetTransactionInternalCount() int64 {
	if m != nil {
		return m.TransactionInternalCount
	}
	return 0
}

func (m *Address) GetLogCount() int64 {
	if m != nil {
		return m.LogCount
	}
	return 0
}

func (m *Address) GetTokenTransferCount() int64 {
	if m != nil {
		return m.TokenTransferCount
	}
	return 0
}

func (m *Address) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Address) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Address) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Address) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *Address) GetIsToken() bool {
	if m != nil {
		return m.IsToken
	}
	return false
}

func (m *Address) GetContractUpdatedBlock() int64 {
	if m != nil {
		return m.ContractUpdatedBlock
	}
	return 0
}

func (m *Address) GetAuditTxHash() string {
	if m != nil {
		return m.AuditTxHash
	}
	return ""
}

func (m *Address) GetCodeHash() string {
	if m != nil {
		return m.CodeHash
	}
	return ""
}

func (m *Address) GetDeployTxHash() string {
	if m != nil {
		return m.DeployTxHash
	}
	return ""
}

func (m *Address) GetContractType() string {
	if m != nil {
		return m.ContractType
	}
	return ""
}

func (m *Address) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Address) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Address) GetIsPrep() bool {
	if m != nil {
		return m.IsPrep
	}
	return false
}

func (m *Address) GetTokenStandard() string {
	if m != nil {
		return m.TokenStandard
	}
	return ""
}

func (m *Address) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*Address)(nil), "models.Address")
}

func init() {
	proto.RegisterFile("address.proto", fileDescriptor_982c640dad8fe78e)
}

var fileDescriptor_982c640dad8fe78e = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdf, 0x4e, 0xdb, 0x4a,
	0x10, 0xc6, 0x65, 0x08, 0x89, 0x33, 0x10, 0x0e, 0xec, 0x09, 0xc9, 0x2e, 0xe1, 0x4f, 0x88, 0x38,
	0x28, 0x3a, 0x12, 0xc9, 0x45, 0x8b, 0x2a, 0x71, 0x53, 0x1a, 0xa4, 0xaa, 0xdc, 0x55, 0xdb, 0xf4,
	0x86, 0x1b, 0x6b, 0x63, 0x2f, 0x89, 0x85, 0xb3, 0x6b, 0x79, 0x37, 0x6d, 0x78, 0x92, 0x3e, 0x8b,
	0xfd, 0x74, 0x95, 0xd7, 0x9b, 0xc8, 0x40, 0x91, 0x7a, 0xb7, 0xf3, 0xcd, 0xcf, 0xdf, 0x8c, 0x66,
	0x46, 0x86, 0x06, 0x0b, 0x82, 0x84, 0x2b, 0x35, 0x88, 0x13, 0xa9, 0x25, 0xaa, 0xce, 0x65, 0xc0,
	0x23, 0x75, 0x78, 0x33, 0x0d, 0xf5, 0x6c, 0x31, 0x19, 0xf8, 0x72, 0x3e, 0x0c, 0xc5, 0x83, 0x9c,
	0x44, 0x72, 0x29, 0x63, 0x2e, 0x86, 0x06, 0xf3, 0x2f, 0xa7, 0x5c, 0x5c, 0x4e, 0x65, 0x32, 0x2f,
	0xe2, 0xa1, 0x8c, 0x75, 0x28, 0x85, 0x1a, 0xe6, 0x52, 0xe1, 0xd4, 0xfb, 0x55, 0x87, 0xda, 0xa7,
	0xc2, 0x1b, 0xf5, 0xa0, 0x66, 0xcb, 0x60, 0xa7, 0xeb, 0xf4, 0xeb, 0x23, 0x37, 0x4b, 0x49, 0x05,
	0x36, 0xfa, 0x0e, 0x5d, 0x25, 0xd0, 0x0d, 0x6c, 0x87, 0xca, 0xf3, 0xa5, 0xd0, 0x09, 0xf3, 0x35,
	0xde, 0xe8, 0x3a, 0x7d, 0x77, 0x74, 0x9a, 0xa5, 0xa4, 0x03, 0x84, 0xb6, 0x2d, 0xe5, 0x85, 0xc1,
	0xd2, 0x2b, 0x61, 0x14, 0x42, 0x75, 0x6b, 0xdf, 0x88, 0xc2, 0xbe, 0x4e, 0x98, 0x50, 0xcc, 0xcf,
	0x9b, 0xf1, 0x7c, 0xb9, 0x10, 0x1a, 0x6f, 0x76, 0x9d, 0xfe, 0xe6, 0xe8, 0xbf, 0x2c, 0x25, 0x67,
	0x70, 0x4a, 0x8f, 0xcb, 0x3e, 0xaf, 0x60, 0xba, 0x57, 0x92, 0x6e, 0x73, 0x05, 0x45, 0x70, 0x58,
	0xc6, 0x42, 0xa1, 0x79, 0x22, 0x58, 0x64, 0xcd, 0x2b, 0xc6, 0x7c, 0x90, 0xa5, 0xe4, 0x7f, 0xe8,
	0xd3, 0x8b, 0xb7, 0xcc, 0x9f, 0x7f, 0x45, 0x71, 0x29, 0x77, 0x67, 0x53, 0x45, 0xb5, 0x6b, 0xa8,
	0x47, 0x72, 0x6a, 0xcd, 0xb7, 0x8c, 0xf9, 0x71, 0x96, 0x12, 0x02, 0x6d, 0x7a, 0x50, 0x36, 0x5f,
	0x43, 0xd4, 0x8d, 0xe4, 0xb4, 0xf8, 0xf6, 0x1e, 0x9a, 0x5a, 0x3e, 0x72, 0x51, 0x54, 0x7e, 0xe0,
	0x89, 0xb5, 0xa9, 0x1a, 0x9b, 0x7e, 0x96, 0x92, 0x73, 0xe8, 0xd1, 0xee, 0xb3, 0x1e, 0xff, 0xc0,
	0x53, 0x64, 0xd4, 0xb1, 0x15, 0x0b, 0xef, 0x2b, 0xa8, 0x4d, 0x58, 0xc4, 0x84, 0xcf, 0x71, 0xad,
	0xeb, 0xf4, 0x9d, 0x51, 0x27, 0x4b, 0x49, 0x1b, 0x0e, 0xe8, 0xbf, 0x65, 0x3b, 0x8b, 0xd0, 0x15,
	0x8b, 0x10, 0x54, 0xf4, 0x53, 0xcc, 0xb1, 0x9b, 0xef, 0x9c, 0x9a, 0x37, 0xba, 0x82, 0x8a, 0x60,
	0x73, 0x8e, 0xeb, 0xe6, 0x0e, 0xce, 0xb2, 0x94, 0x1c, 0x43, 0x87, 0x92, 0xb2, 0xcf, 0x6a, 0xb9,
	0x5e, 0x0e, 0x52, 0x83, 0xe7, 0xbb, 0xf5, 0x13, 0xce, 0x34, 0x0f, 0x3c, 0x1d, 0xce, 0xb9, 0xd2,
	0x6c, 0x1e, 0xe3, 0xed, 0xb7, 0x77, 0xfb, 0x0a, 0xa6, 0x7b, 0x56, 0x1a, 0xaf, 0x14, 0xf4, 0x01,
	0xdc, 0x50, 0x15, 0x43, 0xc0, 0x3b, 0xe6, 0xdc, 0x8e, 0xb2, 0x94, 0x60, 0x68, 0xd1, 0xe6, 0x8b,
	0x73, 0x33, 0x0c, 0xad, 0x85, 0x6a, 0x9c, 0x3f, 0xd0, 0x7b, 0x68, 0xad, 0x7b, 0x5c, 0xc4, 0x81,
	0x29, 0x34, 0x89, 0xa4, 0xff, 0x88, 0x77, 0xf3, 0x8e, 0x68, 0x73, 0x95, 0xfd, 0x5e, 0x24, 0x47,
	0x79, 0x0e, 0xf5, 0xa0, 0xc1, 0x16, 0x41, 0xa8, 0x3d, 0xbd, 0xf4, 0x66, 0x4c, 0xcd, 0x70, 0xd3,
	0x8c, 0x65, 0xdb, 0x88, 0xe3, 0xe5, 0x17, 0xa6, 0x66, 0xa8, 0x03, 0x75, 0x5f, 0x06, 0xbc, 0xc8,
	0x1f, 0x98, 0xbc, 0x9b, 0x0b, 0x26, 0x79, 0x0e, 0xbb, 0x01, 0x8f, 0x23, 0xf9, 0xb4, 0x76, 0x68,
	0x19, 0x62, 0xa7, 0x50, 0xad, 0xc5, 0x67, 0x68, 0xac, 0x9b, 0x33, 0xd3, 0xff, 0xe7, 0x2f, 0x26,
	0x9d, 0x83, 0x74, 0x67, 0x15, 0x8e, 0xf3, 0x45, 0xb5, 0xa0, 0xaa, 0x34, 0xd3, 0x0b, 0x85, 0xc1,
	0x54, 0xb1, 0x11, 0x6a, 0xc2, 0x96, 0xfc, 0x29, 0x78, 0x82, 0xdb, 0x46, 0x2e, 0x02, 0xf4, 0x11,
	0x6a, 0xa1, 0xf2, 0xe2, 0x84, 0xc7, 0xb8, 0x61, 0x46, 0x79, 0x91, 0xa5, 0xa4, 0x07, 0x5d, 0x7a,
	0xf2, 0x62, 0x94, 0x53, 0xf9, 0x23, 0x3f, 0x78, 0xe1, 0x73, 0x43, 0xd3, 0x6a, 0xa8, 0xbe, 0x26,
	0x3c, 0x46, 0x77, 0xb0, 0x5b, 0x9c, 0xa3, 0xd2, 0x4c, 0x04, 0x2c, 0x09, 0xf0, 0x9e, 0xe9, 0xbb,
	0x97, 0xa5, 0xe4, 0x04, 0x8e, 0xe8, 0xe1, 0xeb, 0xc3, 0x5d, 0x91, 0xb4, 0x61, 0xe2, 0x6f, 0x36,
	0x34, 0x9d, 0x3f, 0xcd, 0x27, 0x32, 0xc2, 0xfb, 0xb6, 0x73, 0x13, 0x5d, 0x57, 0xb3, 0x94, 0x6c,
	0xb8, 0xce, 0x08, 0xee, 0xdd, 0xc1, 0xb0, 0xf8, 0xcf, 0x4d, 0xaa, 0xe6, 0x67, 0xf5, 0xee, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x14, 0x29, 0xef, 0x07, 0x05, 0x00, 0x00,
}
