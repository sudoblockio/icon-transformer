// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block_count.proto

package models

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockCount struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (m *BlockCount) Reset()         { *m = BlockCount{} }
func (m *BlockCount) String() string { return proto.CompactTextString(m) }
func (*BlockCount) ProtoMessage()    {}
func (*BlockCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4403ad2f74f36cf, []int{0}
}

func (m *BlockCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockCount.Unmarshal(m, b)
}
func (m *BlockCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockCount.Marshal(b, m, deterministic)
}
func (m *BlockCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockCount.Merge(m, src)
}
func (m *BlockCount) XXX_Size() int {
	return xxx_messageInfo_BlockCount.Size(m)
}
func (m *BlockCount) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockCount.DiscardUnknown(m)
}

var xxx_messageInfo_BlockCount proto.InternalMessageInfo

func (m *BlockCount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BlockCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*BlockCount)(nil), "models.BlockCount")
}

func init() {
	proto.RegisterFile("block_count.proto", fileDescriptor_a4403ad2f74f36cf)
}

var fileDescriptor_a4403ad2f74f36cf = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xca, 0xc9, 0x4f,
	0xce, 0x8e, 0x4f, 0xce, 0x2f, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb,
	0xcd, 0x4f, 0x49, 0xcd, 0x29, 0x96, 0x72, 0x48, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce,
	0xcf, 0xd5, 0xcf, 0xcc, 0x4b, 0xcb, 0x4f, 0xca, 0xc9, 0xaf, 0xc8, 0x2f, 0x48, 0xcd, 0xd3, 0x07,
	0x2b, 0x4b, 0xd6, 0x4d, 0x4f, 0xcd, 0xd3, 0x4d, 0xcf, 0x2f, 0xca, 0x85, 0xf0, 0xf5, 0xf3, 0x0b,
	0x4a, 0x32, 0xf3, 0xf3, 0x8a, 0xf5, 0x41, 0x42, 0x10, 0x93, 0x94, 0x3c, 0xb8, 0xb8, 0x9c, 0x40,
	0xc6, 0x3b, 0x83, 0x4c, 0x17, 0x92, 0xe1, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x74, 0xe2, 0xd8, 0xb5, 0x53, 0x92, 0x85, 0x8b, 0x49, 0x83, 0x31, 0x08, 0x2c, 0x2a,
	0x24, 0xc2, 0xc5, 0x0a, 0x76, 0x84, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x84, 0x63, 0xc5,
	0xb6, 0x6b, 0xa7, 0x24, 0x13, 0x07, 0xa3, 0x13, 0x57, 0x14, 0x87, 0x9e, 0x3e, 0xc4, 0x5d, 0x49,
	0x6c, 0x60, 0xc3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x83, 0x60, 0xcd, 0x43, 0xbb, 0x00,
	0x00, 0x00,
}
